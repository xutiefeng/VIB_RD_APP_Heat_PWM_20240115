/****************************************Copyright (c)****************************************************
**                            Guangzhou ZHIYUAN electronics Co.,LTD.
**
**                                 http://www.zlgmcu.com
**
**--------------File Info---------------------------------------------------------------------------------
** File name:           Stat.h
** Last modified Date:  2011-12-01
** Last Version:        V1.00
** Descriptions:        
**
**--------------------------------------------------------------------------------------------------------
** Created by:          zhaohai
** Created date:        2011-12-01
** Version:             V1.00
** Descriptions:
**
**--------------------------------------------------------------------------------------------------------
** Modified by:
** Modified date:
** Version:
** Descriptions:
**
** Rechecked by:
*********************************************************************************************************/
#ifndef __STAT_H
#define __STAT_H

// #include "includeall.h"

#ifdef __cplusplus
extern  "C" {
#endif                                                                  /*  __cplusplus                 */

/*********************************************************************************************************
** 宏定义
*********************************************************************************************************/

/*********************************************************************************************************
** 枚举: 处理报文帧的返回结果
*********************************************************************************************************/
typedef enum {
    STAT_MSG_DEALED                     = 0,                            /* 已处理一帧有效数据           */
    STAT_MSG_BUSY,                                                      /* 忙                           */
    STAT_MSG_DEALING,                                                   /* 未处理完成                   */
    STAT_MSG_NOT_FINDED,                                                /* 未找到一帧有效数据           */
    STAT_MSG_NOT_ALLOWW,                                                /* 不可写                       */
    STAT_MSG_NOT_ALLOWR,                                                /* 不可读                       */
    STAT_MSG_NOT_NEW,                                                   /* 数据未更新                   */
    STAT_MSG_NOT_IDLE,                                                  /* 剩余空间不足                 */
    STAT_MSG_OUT_ID,                                                    /* ID  超出范围                 */
    STAT_MSG_OUT_DAT,                                                   /* 数据超出范围                 */
    STAT_MSG_ERR_LEN,                                                   /* 长度错误                     */
    STAT_MSG_ERR_CRC,                                                   /* CRC 错误                     */
    STAT_MSG_ERR_ADDR,                                                  /* 地址错误                     */
    STAT_MSG_ERR_CIPHER,                                                /* 密文错误                     */
    STAT_MSG_ERR_HARDWARE,                                              /* 硬件错误                     */
    STAT_MSG_ERR_UNKNOWN                                                /* 未知错误                     */
} STAT_MSG_RESULT_ENUM;

/*********************************************************************************************************
** 枚举: 全局状态变量
*********************************************************************************************************/
/*--枚举类型: Stat.Sysrun的可取值-----------------------------------------------------------------------*/
typedef enum {
    STAT_RUNSTS_INIT                    = 0,                            /* 初始化(系统复位初始化)       */
    STAT_RUNSTS_RUN,                                                    /* 运行中                       */
    STAT_RUNSTS_WAIT,                                                   /* 预睡眠                       */
    STAT_RUNSTS_SLEEP,                                                  /* 休眠中                       */
} STAT_RUNSTS_ENUM;
/*--枚举类型: Stat.System的可取值-----------------------------------------------------------------------*/
typedef enum {
    STAT_SYSTEM_INIT                    = 0,                            /* 初始化                       */
    STAT_SYSTEM_NORMAL,                                                 /* 正常                         */
    STAT_SYSTEM_ERROR,                                                  /* 故障                         */
} STAT_SYSTEM_ENUM;
/*--枚举类型: ------------------------------------------------------------------------------------------*/
typedef enum {
    STAT_SIGN_UNKNOWN                   = 0,                            /* 未知                         */
    STAT_SIGN_L,                                                        /* 低                           */
    STAT_SIGN_H,                                                        /* 高                           */
    STAT_SIGN_RISE,                                                     /* 上升沿                       */
    STAT_SIGN_FALL,                                                     /* 下降沿                       */
} STAT_SIGN_ENUM;
/*********************************************************************************************************
** 结构体: 全局状态变量
*********************************************************************************************************/
typedef struct {
    /*--------------------------------------------------------------------------------------------------*/
    STAT_RUNSTS_ENUM        Sysrun;
    STAT_RUNSTS_ENUM        Canrun;
    STAT_SYSTEM_ENUM        System;
    /*--------------------------------------------------------------------------------------------------*/
    
    /*--------------------------------------------------------------------------------------------------*/
    INT8U                   Test1;
    INT8U                   Test2;
    INT8U                   Test3;
} StatStruct;
/*********************************************************************************************************
** 全局定量
*********************************************************************************************************/

/*********************************************************************************************************
** 全局变量
*********************************************************************************************************/
extern  volatile StatStruct         Stat;

/*********************************************************************************************************
** 函数声明
*********************************************************************************************************/
/******************************************* Public  Function *******************************************/
extern  void            Stat_Init(void);

extern  STAT_SIGN_ENUM  Stat_DealSign(volatile BOOLEAN *pFlagCur, volatile BOOLEAN *pFlagPre);
extern  INT8U           CirBufPointerInc(INT8U ucPointer, INT8U ucInc, INT8U ucBufLen);             /* 仅适用MAX_256长度的Buf */
extern  INT8U           CirBufPointerDec(INT8U ucPointer, INT8U ucDec, INT8U ucBufLen);             /* 仅适用MAX_256长度的Buf */
extern  INT8U           CirBufPointerGap(INT8U ucPointerHead, INT8U ucPointerTail, INT8U ucBufLen); /* 仅适用MAX_256长度的Buf */
extern  INT16U          CalcAndFourDecFiveInc(INT8U ucSourDat, INT8U ucMul, INT8U ucDiv);
#if 0   /* void uxDat[] 在KEIL中不通过 */
extern  void            Sort_Bubble(void uxDat[], INT8U ucLen, INT8U ucWidth, BOOLEAN blOrder);
extern  INT32U          Filter_ArithmeticalAverage(void uxDat[], INT8U ucLen, INT8U ucWidth);
#endif
/******************************************* Private Function *******************************************/

/*********************************************************************************************************
**
*********************************************************************************************************/
#ifdef __cplusplus
}
#endif                                                                  /*  __cplusplus                 */

#endif                                                                  /*  __STAT_H                    */
/*********************************************************************************************************
** END FILE
*********************************************************************************************************/
